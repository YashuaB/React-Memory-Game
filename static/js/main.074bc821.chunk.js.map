{"version":3,"sources":["components/KittenCard/KittenCard.js","components/Nav/Nav.js","components/Wrapper/Wrapper.js","components/Title/Title.js","App.js","serviceWorker.js","index.js"],"names":["KittenCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Nav","href","title","correctIncorrect","topScore","score","Wrapper","children","Title","App","state","kitten","currentScore","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledkitten","array","i","length","j","Math","floor","random","_ref","randomKitten","_this2","this","components_Wrapper_Wrapper","components_Nav_Nav","components_Title_Title","map","components_KittenCard_KittenCard","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.074bc821.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./KittenCard.css\";\r\n\r\nconst KittenCard = props => (\r\n  <div \r\n    className=\"card\" \r\n    value={props.id} \r\n    onClick={() => props.handleClick(props.id)}\r\n  >\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default KittenCard;","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = props => (\r\n  <nav>\r\n    <ul>\r\n      <li className=\"brand\">\r\n        <a href=\"/clicky-game/\">{props.title}</a>\r\n      </li>\r\n      <li id=\"rw\" >{props.correctIncorrect}</li>\r\n\r\n\r\n      <li className=\"\">Score - Top: {props.topScore} | Current: {props.score}</li>\r\n\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Title.css\";\r\n\r\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Title;","import React, { Component } from \"react\"\nimport KittenCard from \"./components/KittenCard\"\nimport Nav from \"./components/Nav\"\nimport Wrapper from \"./components/Wrapper\"\nimport Title from \"./components/Title\"\nimport kitten from \"./kitten.json\"\n\n\n\nfunction randomKitten(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]]\n  }\n  return array;\n}\n\nclass App extends Component {\n  \n  state = {\n    kitten,\n    currentScore: 0,\n    topScore: 0,\n    correctIncorrect: \"\",\n    clicked: [],\n  }\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement()\n      this.setState({ clicked: this.state.clicked.concat(id) })\n    } else {\n      this.handleReset()\n    }\n  }\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1\n    this.setState({\n      currentScore: newScore,\n      correctIncorrect: \"You guessed correctly!\"\n    })\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore })\n    }\n    else if (newScore === 12) {\n      this.setState({ correctIncorrect: \"You win!\" })\n    }\n    this.handleShuffle()\n  }\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      correctIncorrect: \"You guessed incorrectly!\",\n      clicked: []\n    })\n    this.handleShuffle()\n  }\n\n  handleShuffle = () => {\n    let shuffledkitten = randomKitten(kitten)\n    this.setState({ kitten: shuffledkitten })\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          title=\"React Clicky Game\"\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n          correctIncorrect={this.state.correctIncorrect}\n        />\n\n        <Title>\n          Click on an image to earn points, but don't click on any more than once!\n        </Title>\n        \n            {this.state.kitten.map(kitten => (\n              \n                <KittenCard\n                  key={kitten.id}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                  id={kitten.id}\n                  image={kitten.image}\n                />\n            \n            ))}\n        \n        \n        \n      </Wrapper>\n    )\n  }\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}